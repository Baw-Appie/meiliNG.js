# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: 🏗️ Deploy to Stella IT Accounts Production

on:
  workflow_dispatch:

  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    environment: Stella IT Accounts Deployment
    steps:
    - name: 🚧 Checkout repository
      uses: actions/checkout@v2
    - name: 🚧 Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: 🚧 Installing Yarn
      run: npm install -g yarn
    - name: 🗄️ Cache Node Modules
      uses: actions/cache@v2
      with:
        path: |
          ~/cache
          !~/cache/exclude
          **/node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
    - name: 📥 Installing dependencies
      run: |
        yarn
        yarn global add pm2
    - name: 🏗️ Generate Prisma Typescript d.ts
      run: yarn generate
    - name: 🏗️ Build Typescript
      run: yarn build
    - name: 🌐 Setting up deploy env variables
      run: node ./.github/workflows-files/get-dotenv-from-base64.js
      env:
        DEPLOY_ENV_BASE64: ${{ secrets.S4AIT_DEPLOY_ENV_BASE64 }}
    - name: 🕵️ Run Debug script for .env file
      run: node ./.github/workflows-files/env-deploy-validator.js
    - name: 🔒 Setting up deploy key
      run: mkdir ~/.ssh && echo $DEPLOY_KEY > ~/.ssh/id_rsa_deploy
      env:
        DEPLOY_KEY: ${{ secrets.S4AIT_DEPLOY_KEY }}
    - name: 🔒 Setting up SSH config
      run: |
        echo "Host meiling-deploy" > $HOME/.ssh/config
        echo "  HostName ${DEPLOY_TARGET}" >> $HOME/.ssh/config
        echo "  Port 22" >> $HOME/.ssh/config
        echo "  IdentityFile ${HOME}/.ssh/id_rsa_deploy" >> $HOME/.ssh/config
      env:
        DEPLOY_TARGET: ${{ secrets.S4AIT_DEPLOY_TARGET }}
    - name: 🚧 Deploying to production
      run: pm2 deploy production
      
